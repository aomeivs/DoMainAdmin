---
layout: master.dot
title: gas page
---
 
[[##section:
  
    <style>
        table{
            border-collapse: collapse;
            border-spacing: 0;
            font-size:12px;border-top:1px solid #d9d9d9;border-left:1px solid #d9d9d9;
        }
        tr:first-child td{
            text-align: center;
        }
        td{
            border-right: 1px solid #d9d9d9;
            border-bottom: 1px solid #d9d9d9;
        }
        .footer{
            position:fixed;bottom:0;left:0;right:0;background:#f1f1f1;border-top:1px solid #d1d1d1; padding:15px;
        }
        .header{
            position:fixed;top:0;left:0;right:0;background:#f1f1f1;border-bottom:1px solid #d1d1d1; padding:15px;
        }
        #app{
            padding: 60px 0 ;
        }
    </style>

    <div id="app">
        <div class="header">
            <select v-model="filters.area" name="" id="">
                <option value="全部行政区域" selected>全部行政区域</option>
                <option v-for="area in areas" v-bind:value="area.val">{{area.val}}</option>
            </select>
            <input type="text" v-on:keyup.enter="filter" v-model="filters.name" placeholder="加油站关键字匹配，如：22">
            <button type="button" v-on:click="filter">筛选</button>
            <!-- <button type="button" v-on:click="updateDocFiled">更新数据库结构</button> -->
            
        </div>
        <table>
            <tr>
                <td width="20">NO.</td>
                <td width="100">行政区域</td>
                <td width="100">加油站</td>
                <td width="200">地址</td>
                <td width="100">电话</td>
                <template v-if="selectedProType=='p92'">
                    <td width="150">92号优惠</td>
                </template>
                <template v-if="selectedProType=='p95'">
                    <td width="150">95号优惠</td>
                </template>
                <template v-if="selectedProType=='p0'">
                    <td width="150">0号优惠</td>
                </template>
                <td width="150">优惠日期</td>
                <td width="100">操作</td>
            </tr>

            <tr v-for="(item,index) in dataGAS" v-bind:key="index" v-on:click="readRow(item,$event)">
                <td>{{index+1}}</td>
                <td>{{item.area}}</td>
                <td>{{item.name}}</td>
                <td>{{item.add}}</td>
                <td>{{item.tel}}</td>
                <template v-if="selectedProType=='p92'">
                    <td>{{item.product.p92.discount}}</td>
                    <td>{{item.product.p92.date}}</td>
                </template>
                <template v-if="selectedProType=='p95'">
                    <td>{{item.product.p95.discount}}</td>
                    <td>{{item.product.p95.date}}</td>
                </template>
                <template v-if="selectedProType=='p0'">
                    <td>{{item.product.p0.discount}}</td>
                    <td>{{item.product.p0.date}}</td>
                </template>
                <td>
                    <button type="button" v-on:click="delById(item._id)">删除</button>
                </td>
            </tr>
        </table>

        <div class="footer">
            <form action="/gas/api/create">
                <select name="" v-model="gas.area" id="">
                    <option v-for="area in areas" v-bind:value="area.val">{{area.val}}</option>
                </select>
                <input autofocus tabIndex="1" type="text" v-on:keyup.enter="submit(isEdit)" v-model="gas.name" placeholder="加油站" value="">
                <input tabIndex="2" type="text" v-on:keyup.enter="submit(isEdit)" v-model="gas.add" placeholder="地址" value="">
                <input tabIndex="3" type="text" v-on:keyup.enter="submit(isEdit)" v-model="gas.tel" placeholder="电话" value="">
                <select name="" v-model="selectedProType" id="">
                    <option v-for="pro in proType" v-bind:value="pro.key">{{pro.val}}</option>
                </select>
                <template v-if="selectedProType=='p92'">
                    <input tabIndex="4" type="text" v-on:keyup.enter="submit(isEdit)" v-model="gas.product.p92.discount" placeholder="92号优惠" value="">
                    <input tabIndex="5" type="text" v-on:keyup.enter="submit(isEdit)" v-model="gas.product.p92.date" placeholder="优惠日期" value="">
                </template>
                <template v-if="selectedProType=='p95'">
                    <input tabIndex="4" type="text" v-on:keyup.enter="submit(isEdit)" v-model="gas.product.p95.discount" placeholder="95号优惠" value="">
                    <input tabIndex="5" type="text" v-on:keyup.enter="submit(isEdit)" v-model="gas.product.p95.date" placeholder="优惠日期" value="">
                </template>
                <template v-if="selectedProType=='p0'">
                    <input tabIndex="4" type="text" v-on:keyup.enter="submit(isEdit)" v-model="gas.product.p0.discount" placeholder="0号优惠" value="">
                    <input tabIndex="5" type="text" v-on:keyup.enter="submit(isEdit)" v-model="gas.product.p0.date" placeholder="优惠日期" value="">
                </template>

                <template v-if="!isEdit">
                        <button type="button" v-on:click="submit">创建</button>
                </template>
                <template v-else>
                        <button type="button" v-on:click="update">更新</button>
                        <button type="button" v-on:click="cancelUpdate">取消</button>
                </template>
            </form>
        </div>
    </div>
    <script>
        var Main = {
            data(){
                return {
                    isEdit:false,
                    gas:{
                        area:'市南',
                        product:{
                            "p92":{},
                            "p95":{},
                            "p98":{},
                            "p0":{}
                        }
                    },
                    tempGas:{
                        area:'市南',
                        product:{
                            "p92":{},
                            "p95":{},
                            "p98":{},
                            "p0":{}
                        }
                    },
                    areas:[
                       {
                           key:'市南',
                           val:'市南'
                       },
                       {
                           key:'市北',
                           val:'市北'
                       },
                       {
                           key:'黄岛',
                           val:'黄岛'
                       },
                       {
                           key:'李沧',
                           val:'李沧'
                       },
                       {
                           key:'崂山',
                           val:'崂山'
                       },
                       {
                           key:'城阳',
                           val:'城阳'
                       },
                       {
                           key:'即墨',
                           val:'即墨'
                       },
                       {
                           key:'平度',
                           val:'平度'
                       },
                       {
                           key:'莱西',
                           val:'莱西'
                       },
                       {
                           key:'胶州',
                           val:'胶州'
                       }
                    ],
                    selectedProType:'p92',
                    proType:[
                        {
                            key:'p92',
                            val:'92号汽油'
                        },
                        {
                            key:'p95',
                            val:'95号汽油'
                        },
                        {
                            key:'p98',
                            val:'98号汽油'
                        },
                        {
                            key:'p0',
                            val:'0号柴油'
                        }
                    ],
                    filters:{
                        area:'全部行政区域',
                        name:''
                    },
                    dataGAS:[],
                    cloneDataGAS:[]
                }
            },
            mounted(){
                this.repeatFindAll();
            },
            methods:{
                updateDocFiled(){
                    axios.post('/gas/api/updateDocFiled',{dataGAS:this.dataGAS})
                    .then(function (response) {
                        console.log(response);
                        this.repeatFindAll();
                    }.bind(this))
                    .catch(function (error) {
                        console.log(error);
                    });
                },
                editStatusClose(){
                    this.isEdit = false;
                    this.gas=this.tempGas;
                },
                filter(){
                    this.dataGAS = this.cloneDataGAS;
                    let filterList = _.filter(this.dataGAS,(g)=>{
                        if(this.filters.area=='全部行政区域'){
                            if(this.filters.name==''){
                                return true
                            }else{
                                return _.includes(g.name,this.filters.name)
                            }
                        }else{
                            if(this.filters.name==''){
                                return g.area==this.filters.area
                            }else{
                                return g.area==this.filters.area&&_.includes(g.name,this.filters.name)
                            }
                        }
                    })
                    this.dataGAS = filterList;
                    this.editStatusClose();
                },
                update(){
                    axios.post('/gas/api/update',{gas:this.gas})
                    .then(function (response) {
                        console.log(response);
                        layer.msg('更新成功')
                        // this.repeatFindAll();
                    }.bind(this))
                    .catch(function (error) {
                        console.log(error);
                    });
                    this.editStatusClose();
                },
                cancelUpdate(){
                    this.editStatusClose();
                    this.repeatFindAll();
                },
                readRow(item,event){
                    this.gas = item;
                    this.isEdit = true;
                    $(event.target.parentElement).css({color:'red'});
                    $(event.target.parentElement).siblings().css({color:'black'});
                    
                },
                submit(isEdit){
                    if(isEdit){
                        this.update(this.gas);
                        return;
                    }
                    axios.post('/gas/api/create',{
                        gas:this.gas
                    })
                    .then(function (response) {
                        console.log(response)
                        // this.repeatFindAll();
                    }.bind(this))
                    .catch(function (error) {
                        console.log(error);
                    });
                    this.dataGAS.push(this.gas);
                    let area = this.gas.area;
                    let date = this.gas.date;
                    this.gas={
                        area:area,
                        date:date,
                        product:this.tempGas.product
                    };
                    document.querySelector('input').focus();
                    
                },
                delById(_id){
                    if(confirm()){
                        axios.get('/gas/api/delete/'+_id)
                        .then(function (response) {
                            console.log(response)
                            this.repeatFindAll();
                        }.bind(this))
                        .catch(function (error) {
                            console.log(error);
                        });
                    }
                },
                repeatFindAll(){
                    axios.get('/gas/api/find')
                    .then(function (response) {
                        this.dataGAS=response.data;
                        this.cloneDataGAS = _.cloneDeep(this.dataGAS);
                    }.bind(this))
                    .catch(function (error) {
                        console.log(error);
                    });
                }
            }
        }
        var Component = Vue.extend(Main);
        new Component().$mount('#app')
    </script> 
    
#]]