---
layout: master.dot
title: domain page
---
 
[[##section:
  
    <!-- iview api 方式 -->
    <div id="app">
        <a href="/domain/api/signout">退出登录</a>
        <i-table :highlight-row="true" :loading="loading" :columns="columns1" :data="data1" @on-row-click="clickRow"></i-table>
        <div v-if="editStatus">
            <card style="text-align:center;margin:20px auto;">
                <i-form :label-width="80" :model="row" :rules="ruleValidate" style="width:300px;margin:0 auto;">
                    <h3 slot="title">编辑</h3>
                    <form-item label="ID" prop="id">
                        <i-input @on-change="dataChange('_id',selectIndex)" :readonly="true" v-model="row._id" placeholder="id" style="width: 300px"></i-input>
                    </form-item>
                    <form-item label="域名" prop="domain">
                        <i-input @on-change="dataChange('domain',selectIndex)" v-model="row.domain" placeholder="domain" style="width: 300px"></i-input>
                    </form-item>
                    <form-item label="续费" prop="renewFree">
                        <i-input @on-change="dataChange('renewFree',selectIndex)" v-model="row.renewFree" placeholder="renewFree" style="width: 300px"></i-input>
                    </form-item>
                    <form-item label="备注" prop="remark">
                        <i-input @on-change="dataChange('remark',selectIndex)" v-model="row.remark" placeholder="remark" style="width: 300px"></i-input>
                    </form-item>
                    <form-item label="创建日期" prop="createDate">
                        <date-picker @on-change="dataChange('createDate',selectIndex)" v-model="row.createDate" type="date" placeholder="createDate" style="width: 300px"></date-picker>
                    </form-item>    
                    <form-item label="过期日期" prop="expireDate">
                        <date-picker @on-change="dataChange('expireDate',selectIndex)" v-model="row.expireDate" type="date" placeholder="expireDate" style="width: 300px"></date-picker>
                    </form-item>
                    <form-item label="已发送邮件" prop="sendMsg">
                        <i-input @on-change="dataChange('sendMsg',selectIndex)" v-model="row.sendMsg" placeholder="sendMsg" style="width: 300px"></i-input>
                    </form-item>
                    <form-item label="是否过期" prop="isExpired">
                        <i-input @on-change="dataChange('isExpire',selectIndex)" v-model="row.isExpired" placeholder="isExpired" style="width: 300px"></i-input>
                    </form-item>
                    <div style="margin-top:20px;">
                        <i-button @click="showEdit(false)" type="ghost">取消</i-button>
                        <i-button @click="save" type="primary" style="margin-left:20px;">保存</i-button>
                    </div>
                </i-form>
            </card>
        </div>
    </div>
    <div id="vue"></div>
    <script>
        var Main = {
            data(){
                return {
                    selectIndex:0,
                    row:{
                        _id:'',
                        domain:'',
                        remark:'',
                        createDate:'',
                        expireDate:'',
                        sendMsg:'',
                        isExpired:''
                    },
                    ruleValidate:{
                        domain:[
                            {
                                required:true, message:'域名不能为空', trigger: 'blur'
                            }
                        ]
                    },
                    loading:true,
                    editStatus:false,
                    isRowChange:false,
                    columns1:[
                        {
                            title:'id',
                            key:'_id'
                        },
                        {
                            title:'domain',
                            key:'domain'
                        },
                        {
                            title:'renewFree',
                            key:'renewFree'
                        },
                        {
                            title:'remark',
                            key:'remark'
                        },
                        {
                            title:'createDate',
                            key:'createDate',
                            sortable: true,
                            render:(h,params)=>{
                                return moment(params.row.createDate).format('YYYY-MM-DD')
                            }
                        },
                        {
                            title:'expireDate',
                            key:'expireDate',
                            sortable: true,
                            render:(h,params)=>{
                                if(moment(moment(params.row.expireDate).valueOf()-moment(new Date()).valueOf()).month()<=1&&moment(params.row.expireDate).valueOf()-moment(new Date()).valueOf()>0){
                                    return h('span',{style:'color:red;'},[
                                        moment(params.row.expireDate).format('YYYY-MM-DD')
                                    ])
                                }else if(moment(params.row.expireDate).valueOf()-moment(new Date()).valueOf()<=0){
                                    return h('span',{style:'color:#999;'},[
                                        moment(params.row.expireDate).format('YYYY-MM-DD')
                                    ])
                                }else{
                                    return moment(params.row.expireDate).format('YYYY-MM-DD')
                                }
                            }
                        },
                        {
                            title:'sendMsg',
                            key:'sendMsg',
                            render:(h,params)=>{
                                if(params.row.isExpired!="true"){
                                    if(params.row.sendMsg==1){
                                    return h('span',{style:'color:red;'},[
                                       '已发送到30天期邮件'
                                    ])
                                }else if(params.row.sendMsg==2){
                                    return h('span',{style:'color:red;'},[
                                       '已发送到7天期邮件'
                                    ])
                                }else if(params.row.sendMsg==3){
                                    return h('span',{style:'color:red;'},[
                                       '已发送到1天期邮件'
                                    ])
                                }else{
                                    return h('span',[
                                       '暂时不需要通知'
                                    ])
                                }
                                }else{
                                    return h('span',{style:'color:red;'},[
                                       '已过期'
                                    ])
                                }
                            }
                        }
                    ],
                    data1:[
                        
                    ]
                }
            },
            mounted(){
                axios.get('domain/api/find')
                .then(function (response) {
                    // console.log(response);
                    this.data1=response.data;
                    this.loading=false;
                }.bind(this))
                .catch(function (error) {
                    console.log(error);
                });
            },
            methods:{
                clickRow(row,index){
                    this.selectIndex = index;
                    this.row = row;
                    this.editStatus = true;
                    this.row.createDate = moment(row.createDate).format('YYYY-MM-DD');
                    this.row.expireDate = moment(row.expireDate).format('YYYY-MM-DD');
                },
                showEdit(status){
                    this.editStatus = status;
                },
                dataChange(field,rowIndex){
                    this.isRowChange = true;
                    this.data1.forEach((element,index) => {
                        if(index == rowIndex){
                            element[field]=this.row[field]
                        }
                    });
                },
                save(){
                    axios.post('domain/api/update',{
                        data:this.row
                    })
                    .then(function (response) {
                        // this.data1.splice(this.selectIndex,1,this.domain)
                        this.$Message.success('更新成功!');
                        this.editStatus=false;
                    }.bind(this))
                    .catch(function (error) {
                        console.log(error);
                    });
                }
            }
        }
        var Component = Vue.extend(Main);
        new Component().$mount('#app')
    </script> 
    
#]]
<!--     
    传统方式
    <table>
        <tr>
            <td>id</td>
            <td>domain</td>
            <td>remark</td>
            <td>createDate</td>
            <td>expireDate</td>
        </tr>
        [[~model.array :value:index ]]
        <tr>
            <td>[[=value._id]]</td>
            [[? value.domain=='www.baidu.com']]
            [[ var a='color:red;'; ]]
            <td style=[[=a]]>[[=value.domain]]</td>
            [[?]]
            [[? value.domain!='www.baidu.com']]
            <td>[[=value.domain]]</td>
            [[?]]
            <td>[[=value.remark]]</td>
            <td>[[=model.moment(value.createDate).format('YYYY-MM-DD')]]</td>
            <td>[[=model.moment(value.expireDate).format('YYYY-MM-DD')]]</td>
        </tr>
        [[~]]
    </table>
 -->